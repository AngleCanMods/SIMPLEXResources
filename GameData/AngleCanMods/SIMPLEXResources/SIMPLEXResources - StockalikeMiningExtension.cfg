//	================================== seeing the coding among the stars
//	*** ANGLECAN SIMPLEX Resources ***
//	================================== by theJesuit
//	 Stockalike Mining Extention Tanks
//
//	====================================
//	*** Stockalike Minig Extention Tanks

@PART[SMX_Size0OreTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = RareOreTinyTank
		@title = Small RareOre Holding Tank
		@RESOURCE[Ore]
			{	@name = RareOre
				@amount = 0
				@maxAmount = 54	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = NaturalOreTinyTank
		@title = Small NaturalOre Holding Tank
		@RESOURCE[RareOre]
			{	@name = NaturalOre	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = NaturalOreTinyTank
		@title = Small HydrateOre Holding Tank
		@RESOURCE[RareOre]
			{	@name = HydrateOre	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = SaturateTinyTank
		@title = Small Saturate Holding Tank
		@RESOURCE[RareOre]
			{	@name = Saturate
				@amount = 0
				@maxAmount = 72	}
	}
	
@PART[SMX_Mk2Oretank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = HydrateOreMk2Tank
		@title = Mk2 HydrateOre Holding Tank
		@RESOURCE[Ore]
			{	@name = HydrateOre
				@amount = 0
				@maxAmount = 540	}
	}
+PART[HydrateOreMk2Tank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = SaturateMk2Tank
		@title = Mk2 Saturate Holding Tank
		@RESOURCE[Saturate]
			{	@name = Saturate
				@amount = 0
				@maxAmount = 720	}
	}


@PART[SMX_Size3OreTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = RareOreTinyTank
		@RESOURCE[Ore]
			{	@name = RareOre	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = NaturalOreTinyTank
		@RESOURCE[RareOre]
			{	@name = NaturalOre	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = HydrateOreTinyTank
		@RESOURCE[RareOre]
			{	@name = HydrateOre	}
	}
+PART[RareOreTinyTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = SaturateTinyTank
		@RESOURCE[RareOre]
			{	@name = Saturate
				@amount = 0
				@maxAmount = 6000	}
	}

@PART[SMX_Mk3OreTank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = HydrateOreMk3Tank
		@title = Mk3 HydrateOre Holding Tank
		@RESOURCE[Ore]
			{	@name = HydrateOre
				@amount = 0
				@maxAmount = 4000	}
	}
+PART[NaturalOreMk3Tank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = NaturalOreMk3Tank
		@title = Mk3 NaturalOre Holding Tank
		@RESOURCE[Saturate]
			{	@name = NaturalOre
				@amount = 0
				@maxAmount = 4000	}
	}
+PART[SaturateMk3Tank]:NEEDS[!B9PartSwitch,!SimpleFuelSwitch]
	{	@name = SaturateMk3Tank
		@title = Mk3 Saturate Holding Tank
		@RESOURCE[Saturate]
			{	@name = Saturate
				@amount = 0
				@maxAmount = 5000	}
	}


@PART[SMX_Size1Driver|SMX_Size0Driver]:NEEDS[MiningExpansion]
{	@MODULE[ModuleEnginesFX]
	{	@PROPELLANT[Ore]
			{	@name = NaturalOre
			}
	}
}

//

@PART[SMX_RCSDriver]:NEEDS[MiningExpansion]
{	@MODULE[ModuleRCSFX]
	{	@PROPELLANT[Ore]
			{	@name = NaturalOre
			}
	}
}

@PART[SMX_Size0ISRU]:NEEDS[MiningExpansion]
	{	@description = #simplexresources_isru_size0_desc
		!MODULE[ModuleResourceConverter]:HAS[#ConverterName[*]]	{}			//,*	{	}
			MODULE
				{	name = ModuleResourceConverter
					ConverterName = LiquidFuel Distillation
					StartActionName = Start LF Distillation 	//	HydrateOre --> LiquidFuel
					StopActionName = Stop LF Distillation 		// HydrateOre --> LiquidFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = HydrateOre
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = LiquidFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}
			MODULE
				{	name = ModuleResourceConverter
					ConverterName = LiquidFuel Catalysing
					StartActionName = Start LF Catalysing 		//	Saturate --> LiquidFuel
					StopActionName = Stop LF Catalysing 		// Saturate --> LiquidFuel
					AutoShutdown = true
					TemperatureModifier
						{	key = 0 100000
							key = 750 50000
							key = 1000 10000
							key = 1250 500
							key = 2000 50
							key = 4000 0
						}				
					ThermalEfficiency 
						{	key = 0 0 0 0
							key = 500 0.1 0 0
							key = 1000 1.0 0 0
							key = 1250 0.1 0 0
							key = 3000 0 0 0 
						}
					UseSpecialistBonus = true	
					SpecialistEfficiencyFactor = 0.2
					SpecialistBonusBase = 0.05
					ExperienceEffect = ConverterSkill
					EfficiencyBonus = 1	
					INPUT_RESOURCE
						{	ResourceName = Saturate
							Ratio = 1
							FlowMode = STAGE_PRIORITY_FLOW
						}
					INPUT_RESOURCE
						{	ResourceName = ElectricCharge
							Ratio = 160
						}
					OUTPUT_RESOURCE
						{	ResourceName = LiquidFuel
							Ratio = 2
							DumpExcess = false
							FlowMode = STAGE_PRIORITY_FLOW
						}
				}

	}

@PART[SMX_Size0ISRU]:NEEDS[MiningExpansion]
	{	@MODULE[ModuleResourceConverter]:HAS[#ConverterName[*]]
			{	@INPUT_RESOURCE:HAS[#ResourceName[ElectricCharge]]	{	@Ratio *=.125	}		
				@OUTPUT_RESOURCE:HAS[#ResourceName[*]]				{	@Ratio *=0.6	}	}	}
			