//	================================== seeing the coding among the stars
//	*** ANGLECAN SIMPLEX Resources ***
//	================================== by theJesuit
//  Nertea's Mods B9PartSwitch Support
//
//	*** VERSION 1.11.20211227
//	*** Licence CC-BY-NC-SA (http://creativecommons.org/licenses/by-nc-sa/4.0/)
//		This License extends to textures created by theJesuit found in Gamedata/AngleCanMods/SimplexResources/Assets
//		ACStationTanks.dds based on original KD-StationTanks.dds created by @Eleusis La Arwall available at https://spacedock.info/mod/308/ and made available by same license CC-BY-SA 4.0 International
//
//	Contents
//	Stock, ReStock
//	Mining Expansion
//	Near Future Construction
//	CryoTanks
//	SSPX
//	Kerdian Dynamics

//	===========================
//	*** Keridian Dynamics Tanks


!B9_TANK_TYPE[Ore]:NEEDS[B9PartSwitch]	{}

B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRHydOre
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = HydrateOre
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRNatOre
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = NaturalOre
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRRarOre
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = RareOre
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRSaturate
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = Saturate
			unitsPerVolume = 1.25
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = KSConsumables
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = Consumables
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = KSOrganicSlurry
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = OrganicSlurry
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = KSLifeSupport
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = Consumables
			unitsPerVolume = .75
		}
		RESOURCE
		{	name = Air
			unitsPerVolume = .75
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = KSAir
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = Air
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = KSBadAir
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = BadAir
			unitsPerVolume = 1
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRMetalParts
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = MetalParts
			unitsPerVolume = 3
		}
	}
B9_TANK_TYPE:NEEDS[B9PartSwitch]
	{	name = SRCustomParts
		tankMass = 0.00133333333
		tankCost = 0.83333333333
		RESOURCE
		{	name = CustomParts
			unitsPerVolume = 3
		}
	}

@PART[LargeTank,RadialOreTank,SmallTank]:NEEDS[B9PartSwitch] restock-oretank-1875-1
	{	!RESOURCE[Ore] {}
		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = cargoSwitch
				switcherDescription = Ore Type
				baseVolume = 1500
				switchInFlight = True
				affectDragCubes = false
				SUBTYPE
					{	name = HydrateOre
						tankType = SRHydOre
					}
				SUBTYPE
					{	name = NaturalOre
						tankType = SRNatOre
					}
				SUBTYPE
					{	name = RareOre
						tankType = SRRarOre
					}
				SUBTYPE
					{	name = Saturate
						tankType = SRSaturate
					}
			}
	}

@PART[restock-oretank-1875-1,restock-oretank-375-1]:NEEDS[B9PartSwitch,ReStockPlus] 
	{	!RESOURCE[Ore] {}
		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = cargoSwitch
				switcherDescription = Ore Type
				baseVolume = 1500
				switchInFlight = True
				affectDragCubes = false
				SUBTYPE
					{	name = HydrateOre
						tankType = SRHydOre
					}
				SUBTYPE
					{	name = NaturalOre
						tankType = SRNatOre
					}
				SUBTYPE
					{	name = RareOre
						tankType = SRRarOre
					}
				SUBTYPE
					{	name = Saturate
						tankType = SRSaturate
					}
			}
	}

@PART[SmallTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch]				{	@MODULE[ModuleB9PartSwitch]		{ 	@baseVolume = 300	}	}
@PART[LargeTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch]				{	@MODULE[ModuleB9PartSwitch]		{ 	@baseVolume = 1500	}	}
@PART[RadialOreTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch]			{	@MODULE[ModuleB9PartSwitch]		{ 	@baseVolume = 75	}	}
@PART[restock-oretank-1875-1]:NEEDS[B9PartSwitch,!SimpleFuelSwitch]	{	@MODULE[ModuleB9PartSwitch]		{ 	@baseVolume = 800	}	}
@PART[restock-oretank-375-1]:NEEDS[B9PartSwitch,!SimpleFuelSwitch]	{	@MODULE[ModuleB9PartSwitch]		{ 	@baseVolume = 3500	}	}


@PART[AirRadialTank]:NEEDS[B9PartSwitch]
	{	!RESOURCE[Air] {}
		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = cargoSwitch
				switcherDescription = Air Type
				baseVolume = 50
				switchInFlight = True
				affectDragCubes = false
				SUBTYPE
					{	name = Air
						tankType = KSAir
					}
				SUBTYPE
					{	name = BadAir
						tankType = KSBadAir
					}
			}
	}


@PART[SmallTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch,!ReStock]
	{	!mesh[*] {}
		MODEL
			{	model = Squad/Parts/Resources/SmallTank/SmallTank
				texture = ksp_s_resourceContainer_diff, AngleCanMods/SIMPLEXResources/Assets/S-Standard-C
			}
	}
@PART[LargeTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch,!ReStock]
	{	!mesh[*] {}
		MODEL
			{	model = Squad/Parts/Resources/LargeTank/LargeTank
				texture = ksp_l_resourceContainer_diff, AngleCanMods/SIMPLEXResources/Assets/L-Standard-C
			}
	}
@PART[RadialOreTank]:NEEDS[B9PartSwitch,!SimpleFuelSwitch,!ReStock]
	{	!mesh[*] {}
		MODEL
			{	model = Squad/Parts/Resources/RadialTank/RadialOreTank
				texture = ksp_r_resourceContainer_psd_2, AngleCanMods/SIMPLEXResources/Assets/R-Standard-C
			}
	}


//	***	Mining Expansion

@PART[SMX_Size3OreTank,SMX_Mk2Oretank,SMX_Size0OreTank,SMX_Mk3OreTank]:NEEDS[B9PartSwitch,MiningExpansion]
	{	!RESOURCE[Ore] {}
		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = cargoSwitch
				switcherDescription = Ore Type
				baseVolume = 1500
				switchInFlight = True
				affectDragCubes = false
				SUBTYPE
					{	name = HydrateOre
						tankType = SRHydOre
					}
				SUBTYPE
					{	name = NaturalOre
						tankType = SRNatOre
					}
				SUBTYPE
					{	name = RareOre
						tankType = SRRarOre
					}
				SUBTYPE
					{	name = Saturate
						tankType = SRSaturate
					}
			}
	}

@PART[SMX_Size3OreTank]:NEEDS[B9PartSwitch,MiningExpansion]
	{	@MODULE[ModuleB9PartSwitch]	{ 	@baseVolume = 4500	}	}

@PART[SMX_Size0OreTank]:NEEDS[B9PartSwitch,MiningExpansion]
	{	@MODULE[ModuleB9PartSwitch]	{ 	@baseVolume = 50	}	}

@PART[SMX_Mk2Oretank]:NEEDS[B9PartSwitch,MiningExpansion]
	{	@MODULE[ModuleB9PartSwitch]	{ 	@baseVolume = 550	}	}

@PART[SMX_Mk3OreTank]:NEEDS[B9PartSwitch,MiningExpansion]
	{	@MODULE[ModuleB9PartSwitch]	{ 	@baseVolume = 4000	}	}
	
// ***	Near Future Construction

+B9_TANK_TYPE[MPEC]:NEEDS[NearFutureConstruction,KerbalismSimplex]
	{	@name = SRNFLS
		RESOURCE
			{	name = Air
				unitsPerVolume = 0.05
			}
		RESOURCE
			{	name = Consumables
				unitsPerVolume = 0.05
			}
		@RESOURCE[MonoPropellant]
			{	@unitsPerVolume = 0.10
			}
		@RESOURCE[ElectricCharge]
			{	@unitsPerVolume = 1.5
			}
	}

	@PART[truss-hex-01|truss-hex-02|truss-octo-01|truss-octo-02]:NEEDS[nearfutureconstruction]
		{	@MODULE[ModuleB9PartSwitch]
				{	@SUBTYPE[Ore]						// removes Ore and replaces with NaturalOre
						{	@name = NaturalOre
							@title = NaturalOre
							@tankType = SRNatOre
	//						@descriptionSummary = #LOC_NFConstruction_switcher_subtype_variant_Ore_summary
	//						@descriptionDetail = #LOC_NFConstruction_switcher_subtype_variant_Ore_detail
						}
					+SUBTYPE[NaturalOre]	
						{	@name = HydrateOre
							@title = HydrateOre
							@tankType = SRHydOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = RareOre
							@title = RareOre
							@tankType = SRRarOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = Saturate
							@title = Saturate
							@tankType = SRSaturate
						}
					+SUBTYPE[MPEC]
						{	@name = SRNFLS
							@title = Life Support
							@tankType = SRNFLS
						}
				}
		}
		
	@PART[truss-hex-01|truss-hex-02|truss-octo-01|truss-octo-02]:NEEDS[nearfutureconstruction,KerbalismSimplex]
		{	@MODULE[ModuleB9PartSwitch]
				{	+SUBTYPE[MPEC]
						{	@name = SRNFLS
							@title = Life Support
							@tankType = SRNFLS
						}
				}
		}
		
	@PART[truss-hex-22]:NEEDS[nearfutureconstruction,AngleCanMods/SIMPLEXTechTree]
		{	@MODULE[ModuleB9PartSwitch]
				{	@SUBTYPE[Ore]						// removes Ore and replaces with NaturalOre
						{	@name = NaturalOre
							@title = NaturalOre
							@tankType = SRNatOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = HydrateOre
							@title = HydrateOre
							@tankType = SRHydOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = RareOre
							@title = RareOre
							@tankType = SRRarOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = Saturate
							@title = Saturate
							@tankType = SRSaturate
						}
				}
		}
	@PART[truss-hex-22]:NEEDS[nearfutureconstruction,AngleCanMods/TETRIXTechTree]
		{	@MODULE[ModuleB9PartSwitch]
				{	@SUBTYPE[Ore]						// removes Ore and replaces with NaturalOre
						{	@name = NaturalOre
							@title = NaturalOre
							@tankType = SRNatOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = HydrateOre
							@title = HydrateOre
							@tankType = SRHydOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = RareOre
							@title = RareOre
							@tankType = SRRarOre
						}
					+SUBTYPE[NaturalOre]	
						{	@name = Saturate
							@title = Saturate
							@tankType = SRSaturate
						}
				}
		}

	@PART[KKAOSS_Ore_Tank]:NEEDS[PlanetaryBaseInc]
		{	!RESOURCE[Ore]	{}
			MODULE
				{	name = ModuleB9PartSwitch
					moduleID = cargoSwitch
					switcherDescription = Ore Type
					baseVolume = 400
					switchInFlight = True
					affectDragCubes = false
					SUBTYPE
						{	name = HydrateOre
							tankType = SRHydOre
						}
					SUBTYPE
						{	name = NaturalOre
							tankType = SRNatOre
						}
					SUBTYPE
						{	name = RareOre
							tankType = SRRarOre
						}
					SUBTYPE
						{	name = Saturate
							tankType = SRSaturate
						}
				}
		}

	@PART[KKAOSS_Small_Ore_Tank]:NEEDS[PlanetaryBaseInc]
		{	!RESOURCE[Ore]	{}
			MODULE
				{	name = ModuleB9PartSwitch
					moduleID = cargoSwitch
					switcherDescription = Ore Type
					baseVolume = 200
					switchInFlight = True
					affectDragCubes = false
					SUBTYPE
						{	name = HydrateOre
							tankType = SRHydOre
						}
					SUBTYPE
						{	name = NaturalOre
							tankType = SRNatOre
						}
					SUBTYPE
						{	name = RareOre
							tankType = SRRarOre
						}
					SUBTYPE
						{	name = Saturate
							tankType = SRSaturate
						}
				}
		}

//	CryoTanks

!B9_TANK_TYPE[LH2O]:NEEDS[CryoTanks]		{	}
!B9_TANK_TYPE[LH2]:NEEDS[CryoTanks]			{	}
!B9_TANK_TYPE[LH2Cryo]:NEEDS[CryoTanks]		{	}
!B9_TANK_TYPE[LH2OCryo]:NEEDS[CryoTanks]	{	}
!B9_TANK_TYPE[LM]:NEEDS[CryoTanks]	{	}
!B9_TANK_TYPE[LMOx]:NEEDS[CryoTanks]	{	}

// The following NEEDS used to be FOR.  better check!
@PART[hydrogen-radial-125-1]:NEEDS[CryoEngines]	{	@title = YDR-01 CryoFuel Tank		}
@PART[hydrogen-radial-25-1]:NEEDS[CryoEngines]	{	@title = YDR-18 CryoFuel Tank 		}
@PART[hydrogen-radial-375-1]:NEEDS[CryoEngines]	{	@title = YDR-64 CryoFuel Tank		}
@PART[hydrogen-125-2]:NEEDS[CryoEngines]			{	@title = YD12-4 CryoFuel Tank		}
@PART[hydrogen-125-1]:NEEDS[CryoEngines]			{	@title = YD12-8 CryoFuel Tank		}
@PART[hydrogen-25-3]:NEEDS[CryoEngines]			{	@title = YD25-16 CryoFuel Tank		}
@PART[hydrogen-25-2]:NEEDS[CryoEngines]			{	@title = YD25-32 CryoFuel Tank		}
@PART[hydrogen-25-1]:NEEDS[CryoEngines]			{	@title = YD25-64 CryoFuel Tank		}
@PART[hydrogen-375-3]:NEEDS[CryoEngines]			{	@title = YD37-036 CryoFuel Tank		}
@PART[hydrogen-375-2]:NEEDS[CryoEngines]			{	@title = YD37-072 CryoFuel Tank		}
@PART[hydrogen-375-1]:NEEDS[CryoEngines]			{	@title = YD37-144 CryoFuel Tank		}
@PART[hydrogen-5-3]:NEEDS[CryoEngines]			{	@title = YD50-144 CryoFuel Tank		}
@PART[hydrogen-5-2]:NEEDS[CryoEngines]			{	@title = YD50-288 CryoFuel Tank		}
@PART[hydrogen-5-1]:NEEDS[CryoEngines]			{	@title = YD50-576 CryoFuel Tank		}
@PART[hydrogen-10-1]:NEEDS[CryoEngines]			{	@title = YDA0-1152 CryoFuel Tank	}



PARTUPGRADE	
	{	name = StockTanksCryo
		partIcon = liquidEngine2
		techRequired = highPerformanceFuelSystems
		entryCost = 5000
		cost = 0 // for display only; all parts implementing this will need a PartStatsUpgradeModule with cost = this.
		title = CryoFuel in Stock Tanks
		basicInfo = Installs advanced equipment in associated parts for more efficient work.
		manufacturer = AngleCan Systems
		description = Adds a CyroFuel option in regular rocket fuel tanks.
	}

//	OX|LF|LFOX
B9_TANK_TYPE
	{	name = CF
		tankMass = 0.000354675
		tankCost = 0.12
		RESOURCE
			{	name = CryoFuel
				unitsPerVolume = 5
			}
	}
B9_TANK_TYPE
	{	name = CFOx
		tankMass = 0.000523628
		tankCost = 0.00
		RESOURCE
			{	name = CryoFuel
				unitsPerVolume = 1.875
			}
		RESOURCE
			{	name = Oxidizer
				unitsPerVolume = 0.625
			}
	}

@PART[*]:HAS[@RESOURCE[LiquidFuel],@RESOURCE[Oxidizer]]:BEFORE[CryoTanks]	// Regular Tanks
	{	%LF = #$RESOURCE[LiquidFuel]/maxAmount$
		%OX = #$RESOURCE[Oxidizer]/maxAmount$

		%totalCap = #$RESOURCE[LiquidFuel]/maxAmount$
		@totalCap += #$RESOURCE[Oxidizer]/maxAmount$

		%massOffset = #$totalCap$
		@massOffset *= 0.000625 // standard dry mass per units of LF/OX
		@massOffset *= -1

		@LF *= #$@RESOURCE_DEFINITION[LiquidFuel]/unitCost$
		@OX *= #$@RESOURCE_DEFINITION[Oxidizer]/unitCost$

		%costOffset = #$LF$
		@costOffset += #$OX$
		@costOffset *= -1

		!RESOURCE[LiquidFuel] {}
		!RESOURCE[Oxidizer] {}

		!MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]] {}

		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = fuelSwitch
				switcherDescription = #LOC_CryoTanks_switcher_fuel_title
				baseVolume = #$../totalCap$
				SUBTYPE
					{	name = LF/O
						title = #LOC_CryoTanks_switcher_fuel_lfox
						tankType = LFOX
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = CryoFuelOxidizer
						title = CryoFuelOxidizer
						upgradeRequired  = StockTanksCryo
						tankType = CFOx
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = Oxidizer
						title = #LOC_CryoTanks_switcher_fuel_ox
						tankType = OX
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = LiquidFuel
						title = #LOC_CryoTanks_switcher_fuel_lf
						tankType = LF
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
			}

		MODULE
			{	name =  ModuleCryoTank
				CoolingEnabled = False
				BOILOFFCONFIG
					{	FuelName = CryoFuel
						BoiloffRate = 0.005
						CoolingCost = 0.045
					}
			}
	}
RESOURCE_DEFINITION			// From CRP, as it is needed for balancing the cryo tanks)
	{	name = LqdHydrogen
		displayName = LqdHydrogen
		abbreviation = LH2
		density = 0.00007085000
		unitCost = 0.0367500
		hsp = 9690 
		vsp = 448500
		flowMode = STACK_PRIORITY_SEARCH
		transfer = PUMP
		isTweakable = true
		isVisible = true
		volume = 1
	}

@PART[*]:HAS[@RESOURCE[LqdHydrogen],!RESOURCE[Oxidizer]]:BEFORE[CryoTanks]	// 'Hydrogen' Tanks
	{	%LH2 = #$RESOURCE[LqdHydrogen]/maxAmount$

		%massOffset = #$LH2$
		@massOffset *= 0.00001417 // <- EDIT HERE (dry mass per unit LH2 capacity)
		@massOffset *= -1

		%costOffset = #$LH2$
		@costOffset *= #$@RESOURCE_DEFINITION[LqdHydrogen]/unitCost$
		@costOffset *= -1

		!RESOURCE[LqdHydrogen] {}

		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = fuelSwitch
				switcherDescription = #LOC_CryoTanks_switcher_fuel_title

				baseVolume = #$../LH2$
				@baseVolume /= 7.5

				SUBTYPE
					{	name = CryoFuelOxidizer
						title = CF/Ox
						tankType = CFOx
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = CryoFuel
						title = CF
						tankType = CF
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = Oxidizer
						title = Ox
						tankType = OX
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = LiquidFuel
						title = LF
						tankType = LF
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
			}
		MODULE
			{	name =  ModuleCryoTank
				CoolingEnabled = True
				BOILOFFCONFIG
					{	FuelName = CryoFuel

						BoiloffRate = 0.005
						CoolingCost = 0.02
					}
			}
	}

@PART[*]:HAS[@RESOURCE[LqdHydrogen],@RESOURCE[Oxidizer]]:BEFORE[CryoTanks]	// 'Hydrogen' Tanks
	{	%LH2 = #$RESOURCE[LqdHydrogen]/maxAmount$
		%OX = #$RESOURCE[Oxidizer]/maxAmount$

		%totalCap = #$RESOURCE[LqdHydrogen]/maxAmount$
		@totalCap += #$RESOURCE[Oxidizer]/maxAmount$

		%massOffset = #$LH2$
		@massOffset *= 0.000056 // <- EDIT HERE
		@massOffset *= -1

		@LH2 *= #$@RESOURCE_DEFINITION[LqdHydrogen]/unitCost$
		@OX *= #$@RESOURCE_DEFINITION[Oxidizer]/unitCost$

		%costOffset = #$LH2$
		@costOffset += #$OX$
		@costOffset *= -1

		!RESOURCE[LqdHydrogen] {}
		!RESOURCE[Oxidizer] {}

		MODULE
			{	name = ModuleB9PartSwitch
				moduleID = fuelSwitch
				switcherDescription = #LOC_CryoTanks_switcher_fuel_title

				baseVolume = #$../totalCap$
				@baseVolume /= 5.327

				SUBTYPE
					{	name = CryoFuelOxidizer
						title = CF/Ox
						tankType = CFOx
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = CryoFuel
						title = CF
						tankType = CF
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = Oxidizer
						title = LOC_CryoTanks_switcher_fuel_ox
						tankType = OX
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
				SUBTYPE
					{	name = LiquidFuel
						title = LF
						tankType = LF
						addedMass = #$../../massOffset$
						addedCost = #$../../costOffset$
					}
			}

		MODULE
			{	name =  ModuleCryoTank
				CoolingEnabled = False
				BOILOFFCONFIG
					{	FuelName = CryoFuel
						BoiloffRate = 0.005
						CoolingCost = 0.045
					}
			}
	}

@PART[externalTank*,miniFuelTank]:AFTER[CryoTanks]
	{	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[fuelSwitch]]
			{	!SUBTYPE[CryoFuelOxidizer]	{}
				!SUBTYPE[CryoFuel]			{}
			}
	}
	
// Check this NEEDS as it used to be FOR
@PART[sspx-habitation-375-3]:NEEDS[SSPX]
	{	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch]]
			{	!SUBTYPE[LH2]	{}
				!SUBTYPE[LH2O]	{}
			}
		!MODULE[ModuleCryoTank]	{}
	}

@PART[truss-octo-01]:NEEDS[NearFutureConstruction]
	{	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch]]
			{	!SUBTYPE[LH2OCryo]	{}
				!SUBTYPE[LH2Cryo]	{}
			}
		!MODULE[ModuleCryoTank]	{}
	}

//	***	HabTech2

!B9_TANK_TYPE[ht2_02]:NEEDS[HabTech2]		{	}
// Check this NEEDS as it used to be FOR
@PART[ht2_questPod]:FOR[HabTech2]
	{	@MODULE[ModuleB9PartSwitch]:HAS[#moduleID[tankSwitch]]
			{	@SUBTYPE[02]
					{	@name = Air
						@tankType = KSAir
						@title = Air
					}
			}
	}



@PART[mk4fueltank*]:NEEDS[MarkIVSystem&CryoTanks]:FOR[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[Cryogenic?LH2/O]	{}
				!SUBTYPE[Cryogenic?LH2]		{}
			}
		!MODULE[ModuleCryoTank]				{}
	}


// Different handling for parts that don't have a structural variant
@PART[mk4fuselage-1]:NEEDS[MarkIVSystem&CryoTanks]:AFTER[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[LH2/O/MP]	{}
				!SUBTYPE[LH2/MP]	{}
			}
		!MODULE[ModuleCryoTank]		{}
	}
@PART[mk4fuselage-2]:NEEDS[MarkIVSystem&CryoTanks]:AFTER[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[LH2/O/MP]	{}
				!SUBTYPE[LH2/MP]	{}
			}
		!MODULE[ModuleCryoTank]		{}
	}
@PART[mk4fuselage-3]:NEEDS[MarkIVSystem&CryoTanks]:AFTER[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[LH2/O/MP]	{}
				!SUBTYPE[LH2/MP]	{}
			}
		!MODULE[ModuleCryoTank]		{}
			// {	name =  ModuleCryoTank
				// CoolingCost = 0.09
				// CoolingEnabled = False
				// BOILOFFCONFIG
					// {	FuelName = LqdHydrogen
						// BoiloffRate = 0.05
					// }
			// }
	}

@PART[mk4tail*]:NEEDS[MarkIVSystem&CryoTanks]:AFTER[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[LH2/O/MP]	{}
				!SUBTYPE[LH2/MP]	{}
			}
		!MODULE[ModuleCryoTank]		{}
	}

@PART[mk4adapter*]:NEEDS[MarkIVSystem&CryoTanks]:AFTER[zzz_CryoTanks]
	{  @MODULE[ModuleB9PartSwitch]
			{	!SUBTYPE[LH2/O/MP]	{}
				!SUBTYPE[LH2/MP]	{}
			}
		!MODULE[ModuleCryoTank]		{}
	}


//	***	SSPX Containers Decal Switching

@PART[sspx-cargo-container*,sspx-logistics*]:NEEDS[!KerbalismSimplex]:AFTER[StationPartsExpansionRedux]
	{	@MODULE[ModuleB9DisableTransform]
			{	!transform = OreDecal
				!transform = MetallicOreDecal
				!transform = SpecializedPartsDecal
				!transform = HydratesDecal
				!transform = WaterDecal
				!transform = RocketPartsDecal
				transform = UraniniteDecal
				transform = SubstrateDecal
				transform = MineralsDecal
				transform = CommoditiesDecal
				transform = ExoticMineralsDecal
				transform = RareMetalsDecal
				transform = MaterialKitsDecal
				transform = MetalsDecal
				transform = PolymersDecal
				transform = SuppliesDecal
				transform = MachineryDecal
				transform = RecyclablesDecal
				transform = FertilizerDecal
				transform = GypsumDecal
				transform = DirtDecal
				transform = SilicatesDecal
				transform = SiliconDecal
				transform = RefinedExoticsDecal
				transform = ColonySuppliesDecal
				transform = OrganicsDecal
				transform = RockDecal
				transform = LeadDecal
				transform = SnacksDecal
				transform = SoilDecal
				transform = ScrapMetalDecal
				transform = LifeSupportDecal
			}
	}

@PART[sspx-cargo-container*,sspx-logistics*]:NEEDS[KerbalismSimplex]:AFTER[StationPartsExpansionRedux]
	{	@MODULE[ModuleB9DisableTransform]
			{	!transform = OreDecal
				!transform = MetallicOreDecal
				!transform = SuppliesDecal
				!transform = SpecializedPartsDecal
				!transform = FertilizerDecal
				!transform = HydratesDecal
				!transform = WaterDecal
				!transform = SnacksDecal
				!transform = RocketPartsDecal
				transform = UraniniteDecal
				transform = SubstrateDecal
				transform = MineralsDecal
				transform = CommoditiesDecal
				transform = ExoticMineralsDecal
				transform = RareMetalsDecal
				transform = MaterialKitsDecal
				transform = MetalsDecal
				transform = PolymersDecal
				transform = MachineryDecal
				transform = RecyclablesDecal
				transform = GypsumDecal
				transform = DirtDecal
				transform = SilicatesDecal
				transform = SiliconDecal
				transform = RefinedExoticsDecal
				transform = ColonySuppliesDecal
				transform = OrganicsDecal
				transform = RockDecal
				transform = LeadDecal
				transform = SoilDecal
				transform = ScrapMetalDecal
				transform = LifeSupportDecal
			}
	}

@PART[sspx-cargo-container*,sspx-logistics*]:BEFORE[StationPartsExpansionRedux]
	{	transferVolume = #$MODULE[ModuleB9PartSwitch]/baseVolume$
		!MODULE[ModuleB9PartSwitch]	{}
	}

@PART[sspx-cargo-container*,sspx-logistics*]:AFTER[StationPartsExpansionRedux]
	{	MODULE
			{	name = ModuleB9PartSwitch
				moduleID = cargoSwitch
				switcherDescription = #LOC_SSPX_Switcher_Cargo_Name
				baseVolume = #$/transferVolume$
				switchInFlight = True
				affectDragCubes = false
				SUBTYPE
					{	name = RareOre
						tankType = SRRarOre
						title = RareOre
						transform = OreDecal
					}
				SUBTYPE
					{	name = NaturalOre
						tankType = SRNatOre
						title = NaturalOre
						transform = MetallicOreDecal
					}
				SUBTYPE
					{	name = HydrateOre
						tankType = SRHydOre
						title = HydrateOre
						transform = HydratesDecal
					}
				SUBTYPE
					{	name = Saturate
						tankType = SRSaturate
						title = Saturate
						transform = WaterDecal
					}
				SUBTYPE
					{	name = MetalParts
						tankType = SRMetalParts
						title = MetalParts
						transform = RocketPartsDecal
					}
				SUBTYPE
					{	name = CustomParts
						tankType = SRCustomParts
						title = CustomParts
						transform = SpecializedPartsDecal
					}
				SUBTYPE:NEEDS[KerbalismSimplex]
					{	name = Consumables
						tankType = KSConsumables
						title = Consumables
						transform = SnacksDecal
					}
				SUBTYPE:NEEDS[KerbalismSimplex]
					{	name = OrganicSlurry
						tankType = KSOrganicSlurry
						title = OrganicSlurry
						transform = FertilizerDecal
					}
				SUBTYPE:NEEDS[KerbalismSimplex]
					{	name = LifeSupport
						tankType = KSLifeSupport
						title = LifeSupport
						transform = SuppliesDecal
					}
			}
	}

@PART[sspx-cargo-container*,sspx-logistics*]:LAST[StationPartsExpansionRedux] 	{ !transferVolume	{}	}

//	===========================
//	*** Keridian Dynamics Tanks

	@B9_TANK_TYPE[KDRocketParts]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[RocketParts] {}
			RESOURCE
				{	name = MetalParts
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDMetal]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[Metal] {}
			RESOURCE
				{	name = CustomParts
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDOre]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[Ore] {}
			RESOURCE
				{	name = Oxidizer
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDMaterialKits]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[MaterialKits] {}
			RESOURCE
				{	name = HydrateOre
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDRMaEM]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[RareMetals] {}
			!RESOURCE[ExoticMinerals] {}
			RESOURCE
				{	name = NaturalOre
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDDirt]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[Dirt] {}
			RESOURCE
				{	name = RareOre
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDLFO]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[LiquidFuel] {}
			!RESOURCE[Oxidizer] {}
			RESOURCE
				{	name = Saturate
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDScrapMetal]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[ScrapMetal] {}
			RESOURCE
				{	name = LiquidFuel
					unitsPerVolume = 1
				}
		}
	@B9_TANK_TYPE[KDMetalOre]:NEEDS[B9PartSwitch,KeridianDynamics]
		{	!RESOURCE[MetalOre] {}
			RESOURCE
				{	name = MonoPropellant
					unitsPerVolume = 1
				}
		}

@PART[KD-T????FS|KD-ST????FS]:HAS[@RESOURCE[KDVolume]]:NEEDS[B9PartSwitch,KeridianDynamics]:AFTER[KeridianDynamics]
	{	!MODULE[ModuleB9PartSwitch]	{}
		MODULE,0
			{	name = ModuleB9PartSwitch
				moduleID = fuelSwitch
				switcherDescription = Tank Type
				baseVolume = #$../KDV5$

				SUBTYPE
					{	name = MetalParts 
						tankType = KDRocketParts
						transform = FS01
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{	name = CustomParts
						tankType = KDMetal
			//			addedMass = #$../../mass$
						transform = FS02
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{	name = Saturate
						tankType = KDLFO
						transform = FS07
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{	name = HydrateOre
						tankType = KDMaterialKits
						transform = FS04
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{	name = NaturalOre
						tankType = KDRMaEM
			//			addedMass = #$../../mass$
						transform = FS05
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{	name = RareOre
						tankType = KDDirt
			//			addedMass = #$../../mass$
						transform = FS06
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{
						name = LiquidFuel
						tankType = KDScrapMetal
			//			addedMass = #$../../mass$
						transform = FS08
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{
						name = Oxidizer
						tankType = KDOre
			//			addedMass = #$../../mass$
						transform = FS03
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
				SUBTYPE
					{
						name = MonoPropellant
						tankType = KDMetalOre
			//			addedMass = #$../../mass$
						transform = FS09
						TEXTURE
							{	currentTexture = KD-StationTanks
								texture = AngleCanMods/SIMPLEXResources/Assets/ACStationTanks
							}
					}
			}
	}
