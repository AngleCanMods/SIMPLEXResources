//	================================== seeing the coding among the stars
//	*** ANGLECAN SIMPLEX Resources ***
//	================================== by theJesuit
//							 Resources
//
//	*** VERSION 1.11.20211227
//	*** Licence CC-BY-NC-SA (http://creativecommons.org/licenses/by-nc-sa/4.0/)
//		This License extends to textures created by theJesuit found in Gamedata/AngleCanMods/SimplexResources/Assets
//		ACStationTanks.dds based on original KD-StationTanks.dds created by @Eleusis La Arwall available at https://spacedock.info/mod/308/ and made available by same license CC-BY-SA 4.0 International
//
//		Supporting:
//			Stockalike Mining Expansion
//			Keridan Dynamics
//			Extraplanetary Launchpads
//			SSPX
//			NearFuture Construction
//			NearFuture Electrical
//			CryoTanks
//			CyroEngines
//			Kerbal Atomics
//
//		PlanetPacks supported 1.10
//			Stock	Vanilla Kerbal solar system
//			OPM		Outer Planets Mod
//			KSRSS	Kerbin Sized Real Solar System
//			JNSQ	Je Ne Sais Quoi
//			GPP		Galileo's Planet Pack
//
//		Quick Changelog 1.11
//			Fixes for B9 Part Switch
//			Updated SSPX tanks for both 'cargo' and 'logistics'
//			Keridian Dynamics tanks have altered tanks with B9 with better support
//
//		Quick Changelog 1.10
//			Kerbal Panetary Base Systems better support with Extraplanetary Launchpads and tanks
//			Extraplanetary Launchpads fixed odd smelter resource
//			Support for GPP
//			Dres now has HydrateOre in a place (stock and JNSQ)
//
//		Quick Changelog 1.9
//			Changed concept Alum fuel to PowderFuel.
//
//		Quick Changelog 1.8
//
//		Quick Changelog 1.7
//			Added B9PartSwitch to ReSockPlus Ore containers
//			Switched Air, BadAir and Consumables and Organic Slurry dependency with Kerbalism Simplex
//			Added habtech2 adjustment for B9Tanks for Oxygen
//
//		Quick Changelog 1.6
//			Support for CryoTanks, CyroEngines, KerbalAtomics
//			Added CryoFuel
//			Hydrogen Engines now use LiquidFuel
//			Added Cryo Support for SSPX, NearFuture Contruction
//			Borrowed and adjusted names for CryoTanks, Cyro Engines, Kerbal Atomics from Communty Part Titles, GPLv3 thanks to @flart
//
//		Quick Changelog 1.5
//			Support for NearFuture Electrical (Nuclear Reactors)
//
//		Quick Changelog 1.4
//			Added Saturate as a Liquid version of HydrateOre.
//			Comets in KSP 1.10 have HydrateOre
//			Rebalance of SimplexOres in Asteroids
//			Better support for Air, BadAir and Xenon to be extracted from Atmoshperes, Saturate and Ores from Oceans
//			Saturate allows for underground lakes.
//			Included Consumables, Organic Slurry, Air and BadAir as established resources.
//			Included ArgonGas and LH2 for cyrotank and Near Future Ion Engine support.
//			Better support for Air, BadAir and Xenon to be extracted from Atmoshperes, Saturate and Ores from Oceans
//			Better coding for placing resources in biomes, across planetary surfaces
//			Better support for updated ScanSat
//			Better variant support with B9PartSwitch and SimpleFuelSwitch
//			Better support for NearFuture Construction and SSPXR tanks.
//			Support for OPM, KSRSS, JNSQ
//
//	========================
//	*** Resource Definitions

//	!RESOURCE_DEFINITION[Ore]:FINAL {}			// Not required

	RESOURCE_DEFINITION
		{	name = Saturate
			displayName = #simplexresources_saturate
			abbreviation = #simplexresources_saturate_abbr
			density = 0.010
			unitCost = 0.05
			flowMode = ALL_VESSEL
			transfer = PUMP
			hsp = 1000
			isTweakable = true
			isVisible = true
			volume = 5
			RESOURCE_DRAIN_DEFINITION
				{		isDrainable = true
						showDrainFX = true
						drainFXPriority = 7
						drainForceISP = 5
						drainFXDefinition = gasDraining
				}
		}
	RESOURCE_DEFINITION
		{	name = HydrateOre
			displayName = #simplexresources_hydrateore
			abbreviation = #simplexresources_hydrateore_abbr
			density = 0.015
			unitCost = 0.02
			flowMode = ALL_VESSEL
			transfer = PUMP
			hsp = 1000
			isTweakable = true
			isVisible = true
			volume = 5
			RESOURCE_DRAIN_DEFINITION
				{		isDrainable = true
						showDrainFX = true
						drainFXPriority = 7
						drainForceISP = 5
						drainFXDefinition = particlesDraining
				}
		}
	RESOURCE_DEFINITION
		{	name = NaturalOre
			displayName = #simplexresources_naturalore
			abbreviation = #simplexresources_naturalore_abbr
			density = 0.035
			unitCost = 1.056
			flowMode = ALL_VESSEL
			transfer = PUMP
			hsp = 814
			isTweakable = true
			isVisible = true
			volume = 5
			RESOURCE_DRAIN_DEFINITION
				{		isDrainable = true
						showDrainFX = true
						drainFXPriority = 7
						drainForceISP = 5
						drainFXDefinition = particlesDraining
				}
		}
	RESOURCE_DEFINITION
		{	name = RareOre
			displayName = #simplexresources_rareore
			abbreviation = #simplexresources_rareore_abbr
			density = 0.035
			unitCost = 5.000
			flowMode = ALL_VESSEL
			transfer = PUMP
			hsp = 814
			isTweakable = true
			isVisible = true
			volume = 5
			RESOURCE_DRAIN_DEFINITION
				{		isDrainable = true
						showDrainFX = true
						drainFXPriority = 7
						drainForceISP = 5
						drainFXDefinition = particlesDraining
				}
		}

	RESOURCE_DEFINITION
		{	name = MetalParts
			displayName = #simplexresources_metalparts
			abbreviation = #simplexresources_metalparts_abbr
			density = 0.01							//	NaturalOre is 0.0275, initial try 0.0025
			unitCost = 10.000
			hsp = 450
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			volume = 5
		}

	RESOURCE_DEFINITION
		{	name = CustomParts
			displayName = #simplexresources_customparts
			abbreviation = #simplexresources_customparts_abbr
			density = 0.01							//	RareOre is 0.0375, initial try 0.0005
			hsp = 450
			unitCost = 20.000
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			volume = 5
		}

	RESOURCE_DEFINITION:NEEDS[!KerbalismSimplex]
		{	name = Consumables
			displayName = #simplexresources_consumables
			volume = 1
			density = 0.000208125					// Based on combined Food and Water metric, with masses being tested against the default profile values
			unitCost = 0.238874700854701
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			isVisible = true
		}
	RESOURCE_DEFINITION:NEEDS[!KerbalismSimplex]
		{	name = OrganicSlurry
			displayName = #simplexresources_orgslurry
			volume = 1
			density = 0.000208125					// Based on simple 1:1 cosumpution to waste
			unitCost = 0
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			isVisible = true
		}

	RESOURCE_DEFINITION:NEEDS[!KerbalismSimplex]
		{	name = Air
			displayName = #simplexresources_air
			volume = 1
			density = 0.00012843900					// current seems to be 10x mass...  so old 0.00128439000 and reducing /10 Based on Atmosphere Resource 1 unit (or day) or air is equivalent to 1000 litres volume
			unitCost = 0.0
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			isVisible = true
		}
	RESOURCE_DEFINITION:NEEDS[!KerbalismSimplex]
		{	name = BadAir
			displayName = #simplexresources_badair
			volume = 1
			density = 0.00012843900				// changed with Air Simple switch between Air and BadAir
			unitCost = 0.00
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			isVisible = true
		}

	RESOURCE_DEFINITION
		{	name = PowderFuel
			displayName = #simplexresources_powderfuel
			abbreviation = #simplexresources_powderfuel_abbr
			density = 0.035		//	Solid Fuel is 0.0075 so same as NaturalOre
			unitCost = 0.08		//	Solid Fuel is/ 0.06
			flowMode = STACK_PRIORITY_SEARCH
			transfer = PUMP
			hsp = 920
			isTweakable = true
			isVisible = true
			volume = 5
			RESOURCE_DRAIN_DEFINITION
				{		isDrainable = true
						showDrainFX = true
						drainFXPriority = 7
						drainForceISP = 5
						drainFXDefinition = particlesDraining
				}
		}

	RESOURCE_DEFINITION:NEEDS[!CommunityResourcePack]			// Same definition as CRP.
		{	name = ArgonGas
			displayName = #simplexresources_argon
			abbreviation = #simplexresources_argon_abbr
			density = 0.00000178400
			unitCost = 0.0105
			flowMode = STAGE_PRIORITY_FLOW
			transfer = PUMP
			isTweakable = true
			isVisible = true
			color = 1,0,0
			volume = 1
		}
	RESOURCE_DEFINITION:NEEDS[!CommunityResourcePack]			// Same definition as CRP.
		{	name = Lithium
			abbreviation = #simplexresources_lithium_abbr
			displayName = #simplexresources_lithium
			density = 0.000534
			flowMode = STAGE_PRIORITY_FLOW
			transfer = PUMP
			isTweakable = true
			isVisible = true
			unitCost = 0.6075
			volume = 1
			ksparpicon = TriggerTech/KSPAlternateResourcePanel/Icons/Lithium
		}
	RESOURCE_DEFINITION:NEEDS[!CommunityResourcePack]
		{	name = Glykerol
			displayName = #simplexresources_glykerol
			density = 0.012
			unitCost = 2
			hsp = 2430 // specific heat capacity (kJ/tonne-K as units) // http://www.engineeringtoolbox.com/specific-heat-fluids-d_151.html
			flowMode = ALL_VESSEL
			transfer = PUMP
			isTweakable = true
			ksparpicon = REPOSoftTech/DeepFreeze/Icons/Glykerol
			ksparpdisplayvalueas = Units
		}
	RESOURCE_DEFINITION
		{	name = NuclearFuel				//		EnrichedUranium
			displayName = #simplexresources_nuclearfuel
			abbreviation = #simplexresources_nuclearfuel_abbr
			density = 0.01097000000
			unitCost = 865.0000000
			isTweakable = true
			isVisible = true
			flowMode = NO_FLOW
			transfer = NONE
			volume = 1
			ksparpicon = TriggerTech/KSPAlternateResourcePanel/Icons/EnrichedUranium
		}
	RESOURCE_DEFINITION
		{	name = NuclearWaste				//		DepletedFuel
			displayName = #simplexresources_nuclearwaste
			abbreviation = #simplexresources_nuclearwaste_abbr
			density = 0.01097
			flowMode = NO_FLOW
			transfer = NONE
			isTweakable = false
			isVisible = true
			unitCost = 0
			volume = 1
			ksparpicon = TriggerTech/KSPAlternateResourcePanel/Icons/DepletedFuel
		}
	RESOURCE_DEFINITION	//:NEEDS[NearFutureElectrical]
		{	name = StoredCharge
			displayName =  #simplexresources_storedcharge
			abbreviation = #simplexresources_storedcharge_abbr
			unitCost = 0
			density = 0
			flowMode = NO_FLOW
			transfer = NONE
			isTweakable = false
			isVisible = true
			volume = 1
			ksparpicon = TriggerTech/KSPAlternateResourcePanel/Icons/StoredCharge
		}

	RESOURCE_DEFINITION
		{	name = CryoFuel
			displayName = #simplexresources_cryofuel
			density = 0.0005						// LqdMethane is 0.00042561	but LiquidFuel is 0.05
			unitCost = 0.45
			hsp = 3348.8 							// from CRP LqdMethane
			vsp = 510000 							// from CRP LqdMethane
			flowMode = STACK_PRIORITY_SEARCH
			transfer = PUMP
			isTweakable = True
			isVisible = true
			ksparpicon = TriggerTech/KSPAlternateResourcePanel/Icons/LqdMethane
		}


//	========================
//	*** Asteroid Definitions

	@PART[PotatoRoid]
		{	!MODULE:HAS[#resourceName[Ore]]	{}
			MODULE
				{	name = ModuleAsteroidResource
					resourceName = HydrateOre
					presenceChance = 25
					lowRange = 25
					highRange = 50
				}
			MODULE
				{	name = ModuleAsteroidResource
					resourceName = NaturalOre
					presenceChance = 100
					lowRange = 50
					highRange = 75
				}
			MODULE
				{	name = ModuleAsteroidResource
					resourceName = RareOre
					presenceChance = 25
					lowRange = 15
					highRange = 30
				}		
		}

	@PART[PotatoComet]
		{	!MODULE:HAS[#resourceName[Ore]]	{}
			MODULE
				{	name = ModuleAsteroidResource
					resourceName = HydrateOre
					presenceChance = 100
					lowRange = 75
					highRange = 95
				}
		}

//	=================================================
//	*** Remove all resources from Global
//		All resources to be added to bodies and biomes in the Distribution A and B cfg files

	GLOBAL_RESOURCE
		{	ResourceName = Saturate
			ResourceType = 0
			Distribution
				{	PresenceChance = 0
					MinAbundance = 0
					MaxAbundance = 0
					Variance = 0
					Dispersal = 0
				}
		}
	GLOBAL_RESOURCE
		{	ResourceName = HydrateOre
			ResourceType = 0
			Distribution
				{	PresenceChance = 0
					MinAbundance = 0
					MaxAbundance = 0
					Variance = 0
					Dispersal = 0
				}
		}
	GLOBAL_RESOURCE
		{	ResourceName = NaturalOre
			ResourceType = 0
			Distribution
				{	PresenceChance = 0
					MinAbundance = 0
					MaxAbundance = 0
					Variance = 0
					Dispersal = 0
				}
		}
	GLOBAL_RESOURCE
		{	ResourceName = RareOre
			ResourceType = 0
			Distribution
				{	PresenceChance = 0
					MinAbundance = 0
					MaxAbundance = 0
					Variance = 0
					Dispersal = 0
				}
		}

//	=========================================
//	*** SimplexOres Stock Scanner adjustments
//	SurfaceScanner = on the surface
//	OrbitalScanner = low orbital scanner
//	SurveyScanner = initial in orbit

//	@PART[SurveyScanner]					// This scanner does not require addtional modules to scan the surface

	@PART[SurfaceScanner]
		{	!MODULE[ModuleResourceScanner]
//	***	Surface
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 0
					ResourceName = Saturate
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 0
					ResourceName = HydrateOre
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 0
					ResourceName = NaturalOre
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 0
					ResourceName = RareOre
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
//	***	Ocean
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 1
					ResourceName = Saturate
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 1
					ResourceName = NaturalOre
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 1
					ResourceName = RareOre
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
//	***	Atmosphere
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = Air
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = BadAir
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
			MODULE
				{	name = ModuleResourceScanner
					ScannerType = 2
					ResourceName = XenonGas
					MaxAbundanceAltitude = 1000
					RequiresUnlock = false
				}
		}
		
	@PART[SurfaceScanner]
		{	!MODULE[ModuleAnalysisResource] {}
			MODULE 
				{	name = ModuleAnalysisResource
					resourceName = Saturate
				}
			MODULE 
				{	name = ModuleAnalysisResource
					resourceName = HydrateOre
				}
			MODULE 
				{	name = ModuleAnalysisResource
					resourceName = NaturalOre
				}
			MODULE 
				{	name = ModuleAnalysisResource
					resourceName = RareOre
				}
		}
		
	@PART[OrbitalScanner]
		{	!MODULE[ModuleResourceScanner] {}
//	***	Surface
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 0
					ResourceName = Saturate
				}		
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 0
					ResourceName = HydrateOre
				}		
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 0
					ResourceName = NaturalOre
				}
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 0
					ResourceName = RareOre
				}		
//	***	Ocean
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 1
					ResourceName = Saturate
				}
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 1
					ResourceName = NaturalOre
				}
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 1
					ResourceName = RareOre
				}
//	***	Atmosphere
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 2
					ResourceName = Air
				}
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 2
					ResourceName = BadAir
				}
			MODULE
				{	name = ModuleResourceScanner
					MaxAbundanceAltitude = 500000
					RequiresUnlock = true
					ScannerType = 2
					ResourceName = XenonGas
				}
		}

//	=================================================
//	*** ExtraPlanetary Launchpads Scanner adjustments

	@PART[OMD|Magnetometer]:NEEDS[Launchpads]
		{	@MODULE[ModuleResourceScanner]
				{	@ResourceName = NaturalOre
				}
		}

